/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlyphongkham;

import DAO.BenhNhanDAO;
import DAO.PhieuKhamDAO;
import DAO.ThongkeDAO;
import Entity.Benhnhan;

import Entity.PhieuKham;
import Utilities.XDate;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import util.Auth;
import util.MsgBox;

/**
 *
 * @author ADMIN
 */
public class QuanLyPhieuKham extends javax.swing.JDialog {

    /**
     * Creates new form Doctor
     */
    public QuanLyPhieuKham(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGioiTinh = new javax.swing.ButtonGroup();
        buttonGroupBaoHiem = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        txtMaPhieuKham = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtNgayKham = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtMaDonThuoc = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtMaBS = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMoTaBenh = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        txtMaBN = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTenBN = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        txtTuoi = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        btnExit = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBang = new javax.swing.JTable();
        txtTongTien = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblBackGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setLayout(null);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Thông tin Phiếu Khám");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(3, 3, 180, 22);
        jPanel3.add(jSeparator2);
        jSeparator2.setBounds(3, 32, 890, 2);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Mã Bác Sĩ");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(15, 83, 77, 22);
        jPanel3.add(txtMaPhieuKham);
        txtMaPhieuKham.setBounds(140, 40, 310, 30);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Mã Phiếu");
        jPanel3.add(jLabel12);
        jLabel12.setBounds(15, 41, 100, 22);
        jPanel3.add(txtNgayKham);
        txtNgayKham.setBounds(140, 130, 310, 30);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Mã Đơn Thuốc");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(520, 40, 130, 22);
        jPanel3.add(txtMaDonThuoc);
        txtMaDonThuoc.setBounds(690, 40, 180, 30);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Mô Tả Bệnh");
        jPanel3.add(jLabel15);
        jLabel15.setBounds(520, 80, 120, 22);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Ngày Khám");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(10, 130, 110, 22);
        jPanel3.add(txtMaBS);
        txtMaBS.setBounds(140, 80, 310, 30);

        txtMoTaBenh.setColumns(20);
        txtMoTaBenh.setRows(5);
        jScrollPane1.setViewportView(txtMoTaBenh);

        jPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(690, 80, 180, 96);

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 908, 190));

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Thông Tin Bệnh Nhân");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(3, 3, 180, 22);
        jPanel2.add(jSeparator1);
        jSeparator1.setBounds(3, 32, 890, 2);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Họ Và Tên BN");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(15, 83, 113, 22);
        jPanel2.add(txtMaBN);
        txtMaBN.setBounds(140, 40, 414, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Mã BN");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(15, 41, 100, 22);
        jPanel2.add(txtTenBN);
        txtTenBN.setBounds(138, 85, 414, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Giới Tính");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(15, 125, 71, 22);

        buttonGroupGioiTinh.add(rdoNam);
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");
        jPanel2.add(rdoNam);
        rdoNam.setBounds(138, 125, 55, 25);

        buttonGroupGioiTinh.add(rdoNu);
        rdoNu.setText("Nữ");
        jPanel2.add(rdoNu);
        rdoNu.setBounds(211, 125, 45, 25);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Tuổi");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(620, 50, 35, 22);

        txtTuoi.setEditable(false);
        jPanel2.add(txtTuoi);
        txtTuoi.setBounds(685, 43, 44, 30);
        jPanel2.add(txtNgaySinh);
        txtNgaySinh.setBounds(747, 43, 121, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("SĐT");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(620, 90, 50, 22);
        jPanel2.add(txtSDT);
        txtSDT.setBounds(688, 85, 180, 30);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 908, 190));

        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        getContentPane().add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 660, 110, 50));

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        getContentPane().add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 660, 110, 50));

        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 660, 110, 50));

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 660, 110, 50));

        btnNew.setText("Nhập Mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        getContentPane().add(btnNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 660, 100, 50));

        tblBang.setBackground(new java.awt.Color(204, 255, 255));
        tblBang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MaphieuKham", "MaDT", "MaBS", "MaBN", "ThanhTien", "NgayKham", "MotaBenh"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblBang);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 910, 170));
        getContentPane().add(txtTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 420, 120, 40));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Tổng Tiền");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 90, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("VNĐ");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, 50, 40));

        lblBackGround.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblBackGround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background/vector-MAY-2020-112.jpg"))); // NOI18N
        getContentPane().add(lblBackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 932, 738));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        insert();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        update();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clearForm();
    }//GEN-LAST:event_btnNewActionPerformed

    private void tblBangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBangMouseClicked
        try {
            BenhNhan_PhieuKham();
            txtTuoi.setText(String.valueOf(tuoi(txtNgaySinh.getText())));
            //edit();
            //test();
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi");
            e.printStackTrace();
        }

    }//GEN-LAST:event_tblBangMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhieuKham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhieuKham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhieuKham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhieuKham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuanLyPhieuKham dialog = new QuanLyPhieuKham(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroupBaoHiem;
    private javax.swing.ButtonGroup buttonGroupGioiTinh;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblBackGround;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblBang;
    private javax.swing.JTextField txtMaBN;
    private javax.swing.JTextField txtMaBS;
    private javax.swing.JTextField txtMaDonThuoc;
    private javax.swing.JTextField txtMaPhieuKham;
    private javax.swing.JTextArea txtMoTaBenh;
    private javax.swing.JTextField txtNgayKham;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenBN;
    private javax.swing.JTextField txtTongTien;
    private javax.swing.JTextField txtTuoi;
    // End of variables declaration//GEN-END:variables
    PhieuKhamDAO dao = new PhieuKhamDAO();
    BenhNhanDAO bndao = new BenhNhanDAO();
    int row = -1;

    void init() {
        this.setLocationRelativeTo(null);
        // this.row = -1;
        //this.fillComboBoxBenhNhan();
        fillTable();
    }

    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblBang.getModel();
        model.setRowCount(0);
        try {
            List<PhieuKham> list = dao.selectALL();
            for (PhieuKham pk : list) {
                Object[] row = {
                    pk.getMaPK(),
                    pk.getMaDT(),
                    pk.getMaBS(),
                    pk.getMaBN(),
                    pk.getThanhtien(),
                    pk.getNgaykham(),
                    pk.getMotaBenh()
                };
                model.addRow(row);
            }
            tblBang.setModel(model);
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy xuất dữ liệu");
            //System.out.println(e);
        }
    }

    PhieuKham getForm() {
        PhieuKham pk = new PhieuKham();
        pk.setMaPK(txtMaPhieuKham.getText());
        pk.setMaBS(txtMaBS.getText());
        pk.setMaDT(txtMaDonThuoc.getText());
        pk.setMotaBenh(txtMoTaBenh.getText());
        pk.setNgaykham(txtNgayKham.getText());
        pk.setThanhtien(Double.parseDouble(txtTongTien.getText()));
        pk.setMaBN(txtMaBN.getText());
        pk.setNgaySinh(txtNgaySinh.getText());

        //
        //
        return pk;
    }

    void setForm(PhieuKham pk) {
        txtMaPhieuKham.setText(pk.getMaPK());
        txtMaBS.setText(pk.getMaBS());
        txtMaDonThuoc.setText(pk.getMaDT());
        txtMoTaBenh.setText(pk.getMotaBenh());
        txtNgayKham.setText(pk.getNgaykham());
        txtTongTien.setText(String.valueOf(pk.getThanhtien()));
        txtMaBN.setText(pk.getMaBN());
        //      
        txtNgaySinh.setText(pk.getNgaySinh());
        txtSDT.setText(pk.getSdT());

        if (pk.isGioiTinh() == false) {
            rdoNam.setSelected(true);
        } else {
            rdoNam.setSelected(true);
        }

//        rdoNam.setSelected(pk.isGioiTinh());
//        rdoNu.setSelected(!pk.isGioiTinh());
        // txtTuoi.setText(String.valueOf(tuoi(pk.getNgaySinh())));
        //
    }

    void edit() {//tblBenhNhan
        String mapk = (String) tblBang.getValueAt(this.row, 0);
        PhieuKham pk = dao.selectById(mapk);
        // PhieuKham pk1 = (PhieuKham) dao.selectALL1(mapk);
        this.setForm(pk);
    }

    void clearForm() {//btnMoi
        txtMaPhieuKham.setText("");
        txtMaDonThuoc.setText("");
        txtMaBS.setText("");
        txtMaBN.setText("");
        txtMoTaBenh.setText("");
        txtNgayKham.setText("");
        txtTongTien.setText("");
        this.row = -1;
        // this.updateStatus();
    }

    void insert() {
        PhieuKham pk = getForm();
        try {
            dao.insert(pk);
            this.fillTable();
            this.clearForm();
            MsgBox.alert(this, "thêm phiếu khám thành công!");
        } catch (Exception e) {
            MsgBox.alert(this, "thêm phiếu khám thất bại!!!");
            System.out.print(e);
        }
    }

    void update() {
        PhieuKham pk = getForm();
        try {
            dao.update(pk);
            this.fillTable();
            this.clearForm();
            MsgBox.alert(this, "cập nhật phiếu khám thành công!");
        } catch (Exception e) {
            MsgBox.alert(this, "cập nhật phiếu khám thất bại!!!");
        }
    }

    void delete() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa");
        } else {
            String mapk = txtMaPhieuKham.getText();
            //không đc xóa chính nhân viên hiện tại
//            if (mabn.equals(Auth.user.get())) {
//                MsgBox.alert(this, "bạn không thể xóa chính bạn!");
            MsgBox.confirm(this, "Bạn có thật sự muốn xóa bệnh nhân này?");
            try {
                dao.delete(mapk);
                this.fillTable();
                this.clearForm();
                MsgBox.alert(this, "xóa bệnh nhân thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "xóa bệnh nhân thất bại");
            }
        }
    }
    ThongkeDAO dao1 = new ThongkeDAO();

    void BenhNhan_PhieuKham() {
        String maphieukham = (String) tblBang.getValueAt(tblBang.getSelectedRow(), 0);
        List<Object[]> list = dao1.getbenhnhan(maphieukham);
        for (Object[] cd : list) {
//            System.out.println(cd[1]);
//      
            txtTenBN.setText((String) cd[0]);
            txtNgaySinh.setText(XDate.toString((Date) cd[1], "yyyy-MM-dd"));
            rdoNam.setSelected((boolean) cd[2]);
            rdoNu.setSelected(!(boolean) cd[2]);
            txtSDT.setText((String) cd[3]);
            txtMaBN.setText((String) cd[4]);
            txtMaPhieuKham.setText((String) cd[5]);
            txtMaDonThuoc.setText((String) cd[6]);
            txtMaBS.setText((String) cd[7]);
            txtMoTaBenh.setText((String) cd[8]);
            txtNgayKham.setText(XDate.toString((Date) cd[9], "yyyy-MM-dd"));
            txtTongTien.setText((String.valueOf(cd[10])));
            txtTuoi.setText(String.valueOf(tuoi(txtNgaySinh.getText())));
        }
    }

//    boolean checkform() {
//        String regex = "^\\d{4}-\\d{2}-\\d{2}$";
//        if (txtMaBN.getText().length() == 0) {
//            MsgBox.alert(this, "không để trống mã bệnh nhân");
//            return false;
//        }
//
//        if (txtTenBN.getText().length() == 0) {
//            MsgBox.alert(this, "không để trống họ tên");
//            return false;
//        }
//
//        if (txtNgaySinh.getText().length() == 0) {
//            MsgBox.alert(this, "không để trống ngày sinh");
//            return false;
//        }
//
//        if (!txtNgaySinh.getText().matches(regex)) {
//            MsgBox.alert(this, "không đúng định dạng ngày sinh!!! vd 2001-02-26");
//            return false;
//        }
//
//        if (txtDiaChi.getText().length() == 0) {
//            MsgBox.alert(this, "không để trống địa chỉ");
//            return false;
//        }
//
//        if (txtSDT.getText().length() == 0) {
//            MsgBox.alert(this, "không để trống SDT");
//            return false;
//        }
//
//        return true;
//    }
//
    int tuoi(String ngaysinh) {
        int namNgaySinh = 0;
        //Benhnhan list = bndao.selectById(txtMaBN.getText());
        //PhieuKham list = dao.selectById(txtMaBN.getText());
        //String ngaysinh = txtNgaySinh.getText();
        String[] parts = ngaysinh.split("-");
        String part1 = parts[0];
        namNgaySinh = Integer.parseInt(String.valueOf(part1));
        int namHienTai = Calendar.getInstance().get(Calendar.YEAR);
        int tuoi = namHienTai - namNgaySinh;
        return tuoi;
    }
//    void test(){       
//        txtMaPhieuKham.setText((String) tblBang.getValueAt(tblBang.getSelectedRow(), 0));
//        txtMaPhieuKham.setText((String) tblBang.getValueAt(tblBang.getSelectedRow(), 0));
//        txtMaPhieuKham.setText((String) tblBang.getValueAt(tblBang.getSelectedRow(), 0));
//        txtMaPhieuKham.setText((String) tblBang.getValueAt(tblBang.getSelectedRow(), 0));
//        txtMaPhieuKham.setText((String) tblBang.getValueAt(tblBang.getSelectedRow(), 0));
//        txtMaPhieuKham.setText((String) tblBang.getValueAt(tblBang.getSelectedRow(), 0));
//        txtMaPhieuKham.setText((String) tblBang.getValueAt(tblBang.getSelectedRow(), 0));
//    }
}
